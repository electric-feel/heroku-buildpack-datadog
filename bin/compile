#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# Fail fast
set -e

# Debug
# set -x

# Parse and derive params
BUILD_DIR=$1
CACHE_DIR=$2
BUILDPACK_DIR=`cd $(dirname $0); cd ..; pwd`

# Load formating tools
source $BUILDPACK_DIR/bin/common.sh

# Setup apt environment
APT_CACHE_DIR="$CACHE_DIR/apt/cache"
APT_STATE_DIR="$CACHE_DIR/apt/state"
APT_OPTIONS="-o debug::nolocking=true -o dir::cache=$APT_CACHE_DIR -o dir::state=$APT_STATE_DIR"

mkdir -p "$APT_CACHE_DIR/archives/partial"
mkdir -p "$APT_STATE_DIR/lists/partial"
mkdir -p $BUILD_DIR/.apt
mkdir -p $BUILD_DIR/.profile.d

topic "Updating apt caches"
apt-get $APT_OPTIONS update | indent

topic "Fetching .debs for libsensors4 and sysstat"
apt-get $APT_OPTIONS -y --force-yes -d install --reinstall libsensors4 | indent
apt-get $APT_OPTIONS -y --force-yes -d install --reinstall sysstat | indent

topic "Installing libsensors4 and sysstat"
dpkg -x $APT_CACHE_DIR/archives/libsensors4*.deb $BUILD_DIR/.apt/
dpkg -x $APT_CACHE_DIR/archives/sysstat*.deb $BUILD_DIR/.apt/

# Export vars for subsequent work
export PATH="$BUILD_DIR/.apt/usr/bin:$PATH"
export LD_LIBRARY_PATH="$BUILD_DIR/.apt/usr/lib/x86_64-linux-gnu:$BUILD_DIR/.apt/usr/lib/i386-linux-gnu:$BUILD_DIR/.apt/usr/lib:$LD_LIBRARY_PATH"
export LIBRARY_PATH="$BUILD_DIR/.apt/usr/lib/x86_64-linux-gnu:$BUILD_DIR/.apt/usr/lib/i386-linux-gnu:$BUILD_DIR/.apt/usr/lib:$LIBRARY_PATH"
export INCLUDE_PATH="$BUILD_DIR/.apt/usr/include:$BUILD_DIR/.apt/usr/include/x86_64-linux-gnu:$INCLUDE_PATH"
export CPATH="$INCLUDE_PATH"
export CPPPATH="$INCLUDE_PATH"
export PKG_CONFIG_PATH="$BUILD_DIR/.apt/usr/lib/x86_64-linux-gnu/pkgconfig:$BUILD_DIR/.apt/usr/lib/i386-linux-gnu/pkgconfig:$BUILD_DIR/.apt/usr/lib/pkgconfig:$PKG_CONFIG_PATH"

topic "Rewrite package-config files"
find $BUILD_DIR/.apt -type f -ipath '*/pkgconfig/*.pc' | xargs --no-run-if-empty -n 1 sed -i -e 's!^prefix=\(.*\)$!prefix='"$BUILD_DIR"'/.apt\1!g'

topic "Installing Datadog Agent"
DD_AGENT="$BUILD_DIR/.datadog-agent"
export DD_HOME="$DD_AGENT"
export DD_START_AGENT=0
sh -c "$(curl -L https://raw.githubusercontent.com/DataDog/dd-agent/master/packaging/datadog-agent/source/setup_agent.sh)"
cp $DD_AGENT/agent/datadog.conf.example $DD_AGENT/agent/datadog.conf

topic "Rewrite Datadog files"
find $DD_AGENT -type f | xargs --no-run-if-empty -n 1 sed -i -e 's!'"$BUILD_DIR"'!/app!g'
topic "Remove compiled python"
find $DD_AGENT -type f -name "*.pyc" -delete

topic "Writing profile script"
cat <<EOF >$BUILD_DIR/.profile.d/datadog.sh
export PATH="\$HOME/.apt/usr/bin:\$PATH"
export LD_LIBRARY_PATH="\$HOME/.apt/usr/lib/x86_64-linux-gnu:\$HOME/.apt/usr/lib/i386-linux-gnu:\$HOME/.apt/usr/lib:\$LD_LIBRARY_PATH"
export LIBRARY_PATH="\$HOME/.apt/usr/lib/x86_64-linux-gnu:\$HOME/.apt/usr/lib/i386-linux-gnu:\$HOME/.apt/usr/lib:\$LIBRARY_PATH"
export INCLUDE_PATH="\$HOME/.apt/usr/include:\$HOME/.apt/usr/include/x86_64-linux-gnu:\$INCLUDE_PATH"
export CPATH="\$INCLUDE_PATH"
export CPPPATH="\$INCLUDE_PATH"
export PKG_CONFIG_PATH="\$HOME/.apt/usr/lib/x86_64-linux-gnu/pkgconfig:\$HOME/.apt/usr/lib/i386-linux-gnu/pkgconfig:\$HOME/.apt/usr/lib/pkgconfig:\$PKG_CONFIG_PATH"

# Determine if the Agent actually needs all that ^^
sed -i "s/^api_key:$/\$DD_API_KEY/g" /app/.datadog-agent/agent/datadog.conf
#/app/.datadog-agent/bin/agent
EOF
