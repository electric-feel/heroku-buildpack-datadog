#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# Fail fast
set -e

# Debug
# set -x

# Parse and derive params
BUILD_DIR=$1
CACHE_DIR=$2
BUILDPACK_DIR=`cd $(dirname $0); cd ..; pwd`

# Load formating tools
source $BUILDPACK_DIR/bin/common.sh

# Setup apt environment
APT_DIR="$BUILD_DIR/.apt"
APT_CACHE_DIR="$CACHE_DIR/apt/cache"
APT_STATE_DIR="$CACHE_DIR/apt/state"
APT_OPTIONS="-o debug::nolocking=true -o dir::cache=$APT_CACHE_DIR -o dir::state=$APT_STATE_DIR"

mkdir -p $APT_CACHE_DIR/archives/partial
mkdir -p $APT_STATE_DIR/lists/partial
mkdir -p $APT_DIR
mkdir -p $BUILD_DIR/.profile.d

topic "Updating apt caches"
apt-get $APT_OPTIONS update | indent

topic "Fetching .debs for libsensors4 and sysstat"
apt-get $APT_OPTIONS -y --force-yes -d install --reinstall libsensors4 | indent
apt-get $APT_OPTIONS -y --force-yes -d install --reinstall sysstat | indent

topic "Installing libsensors4 and sysstat"
dpkg -x $APT_CACHE_DIR/archives/libsensors4*.deb $APT_DIR
dpkg -x $APT_CACHE_DIR/archives/sysstat*.deb $APT_DIR

# Export vars for subsequent work
export PATH="$APT_DIR/usr/bin:$PATH"
export LD_LIBRARY_PATH="$APT_DIR/usr/lib/x86_64-linux-gnu:$APT_DIR/usr/lib/i386-linux-gnu:$APT_DIR/usr/lib:$LD_LIBRARY_PATH"
export LIBRARY_PATH="$APT_DIR/usr/lib/x86_64-linux-gnu:$APT_DIR/usr/lib/i386-linux-gnu:$APT_DIR/usr/lib:$LIBRARY_PATH"
export INCLUDE_PATH="$APT_DIR/usr/include:$APT_DIR/usr/include/x86_64-linux-gnu:$INCLUDE_PATH"
export CPATH="$INCLUDE_PATH"
export CPPPATH="$INCLUDE_PATH"
export PKG_CONFIG_PATH="$APT_DIR/usr/lib/x86_64-linux-gnu/pkgconfig:$APT_DIR/usr/lib/i386-linux-gnu/pkgconfig:$APT_DIR/usr/lib/pkgconfig:$PKG_CONFIG_PATH"

topic "Rewrite package-config files"
find $APT_DIR -type f -ipath '*/pkgconfig/*.pc' | xargs --no-run-if-empty -n 1 sed -i -e 's!^prefix=\(.*\)$!prefix='"$APT_DIR"'\1!g'

topic "Installing Datadog Agent"
DD_AGENT="$BUILD_DIR/.datadog-agent"
export DD_HOME="$DD_AGENT"
export DD_START_AGENT=0
# If an agent version is specified, set the expected (unprefixed) env var
if [ -n $DD_AGENT_VERSION ]; then
  export AGENT_VERSION=$DD_AGENT_VERSION
fi
sh -c "$(curl -L https://raw.githubusercontent.com/DataDog/dd-agent/master/packaging/datadog-agent/source/setup_agent.sh)"
cp $DD_AGENT/agent/datadog.conf.example $DD_AGENT/agent/datadog.conf

# Files are created with the $BUILD_DIR tmp location and need to be updated for /app
# Precompiled python includes errant tmp location and need to be removed
topic "Rewrite Datadog files & remove compiled python"
find $DD_AGENT -type f | xargs --no-run-if-empty -n 1 sed -i -e 's!'"$BUILD_DIR"'!/app!g'
find $DD_AGENT -type f -name "*.pyc" -delete

# Download Datadog Trace Agent and move into place.
GPG_HOME_DIR="$BUILD_DIR/.gnupg"
GPG_KEYRING_FILE="$BUILD_DIR/.apt/trusted.gpg"
GPG_KEY_FILE="$BUILDPACK_DIR/etc/datadog.gpg"
APT_REPO_FILE="$BUILDPACK_DIR/etc/datadog.list"
APT_OPTIONS="-o debug::nolocking=true -o Dir::Etc::Trusted=$GPG_KEYRING_FILE -o Dir::Etc::SourceList=$APT_REPO_FILE -o dir::cache=$APT_CACHE_DIR -o dir::state=$APT_STATE_DIR"
DD_TMP="$BUILD_DIR/.dd_tmp"
mkdir -p $DD_TMP
mkdir -p $GPG_HOME_DIR
apt-get $APT_OPTIONS update | indent
apt-get $APT_OPTIONS -y --force-yes -d install --reinstall datadog-agent | indent
dpkg -x $APT_CACHE_DIR/archives/sysstat*.deb $DD_TMP

# Trace agent should be in /app/.datadog-agent/bin/trace-agent
#mv ?? $DD_AGENT/bin/trace-agent

topic "Writing profile script"
mv $BUILDPACK_DIR/extra/datadog.sh $BUILD_DIR/.profile.d/datadog.sh
